services:
    
    # @todo : renommer les identifiants de services pour matcher les namespaces
    # @todo : n'injecter que les services (@service_name) dont on a besoin et surtout pas le service container

    # Service permettant de charger et valider les fichiers de configuration
    comptes_bundle.configuration.loader:
        class: ComptesBundle\Service\ConfigurationLoader
        arguments: [ @service_container ]

    # Fournisseur de statistiques
    comptes_bundle.stats.provider:
        class: ComptesBundle\Service\StatsProvider
        arguments: [ @service_container ]

    # Service d'import : catégorisation automatique des mouvements
    comptes_bundle.mouvement.categorizer:
        class: ComptesBundle\Service\MouvementCategorizer
        arguments: [ @doctrine.orm.entity_manager ]

    # Service d'import de mouvements : handler Excel pour la banque CIC
    comptes_bundle.import.mouvements.cic.excel:
        class: ComptesBundle\Service\ImportHandler\CICExcelMouvementsImportHandler
        arguments: [ @service_container ]

    # Service d'import de mouvements : handler CSV pour la banque CIC
    comptes_bundle.import.mouvements.cic.csv:
        class: ComptesBundle\Service\ImportHandler\CICCSVMouvementsImportHandler
        arguments: [ @service_container ]

    # Service d'import de mouvements : handler CSV pour la banque Caisse d'Épargne
    comptes_bundle.import.mouvements.caissedepargne.csv:
        class: ComptesBundle\Service\ImportHandler\CaisseEpargneMouvementsImportHandler
        arguments: [ @service_container ]

    # Service d'import de pleins : handler XML pour l'application MyCars
    comptes_bundle.import.pleins.mycars.xml:
        class: ComptesBundle\Service\ImportHandler\MyCarsXMLPleinsImportHandler
        arguments: [ @service_container ]

    # Service d'import de pleins : handler CSV pour l'application MyCars
    comptes_bundle.import.pleins.mycars.csv:
        class: ComptesBundle\Service\ImportHandler\MyCarsCSVPleinsImportHandler
        arguments: [ @service_container ]